{"id":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","dependencies":[{"name":"E:\\Vistara\\package.json","includedInParent":true,"mtime":1753632126084},{"name":"E:\\Vistara\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1751822879414},{"name":"../internals/export","loc":{"line":2,"column":16,"index":30},"parent":"E:\\Vistara\\node_modules\\core-js\\modules\\es.promise.with-resolvers.js","resolved":"E:\\Vistara\\node_modules\\core-js\\internals\\export.js"},{"name":"../internals/new-promise-capability","loc":{"line":3,"column":41,"index":95},"parent":"E:\\Vistara\\node_modules\\core-js\\modules\\es.promise.with-resolvers.js","resolved":"E:\\Vistara\\node_modules\\core-js\\internals\\new-promise-capability.js"}],"generated":{"js":"'use strict';\nvar $ = require('../internals/export');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\n\n// `Promise.withResolvers` method\n// https://tc39.es/ecma262/#sec-promise.withResolvers\n$({ target: 'Promise', stat: true }, {\n  withResolvers: function withResolvers() {\n    var promiseCapability = newPromiseCapabilityModule.f(this);\n    return {\n      promise: promiseCapability.promise,\n      resolve: promiseCapability.resolve,\n      reject: promiseCapability.reject\n    };\n  }\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/core-js/modules/es.promise.with-resolvers.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"../../node_modules/core-js/modules/es.promise.with-resolvers.js":"'use strict';\nvar $ = require('../internals/export');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\n\n// `Promise.withResolvers` method\n// https://tc39.es/ecma262/#sec-promise.withResolvers\n$({ target: 'Promise', stat: true }, {\n  withResolvers: function withResolvers() {\n    var promiseCapability = newPromiseCapabilityModule.f(this);\n    return {\n      promise: promiseCapability.promise,\n      resolve: promiseCapability.resolve,\n      reject: promiseCapability.reject\n    };\n  }\n});\n"},"lineCount":17}},"error":null,"hash":"701df1b3255fca3b4710e468e37afecf","cacheData":{"env":{}}}